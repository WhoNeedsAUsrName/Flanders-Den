Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Parallel Universe,Tags,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury,Script: On Dodge
Shotgun,Do [sword]<d6> damage|[gray](Reuseable),1,attack(d * 2); sfxdamage(target[;]d*2);,,DOUBLES|DOUBLES,,RED,change_power,complicate,,,2,NO,NO,NO,,,,,,,,,,,,,
Dragon's Dagger,Does [fire]<d6> Damage|[fire]Burns a dice|[gray](Reuseable),2,attack(d[;] FIRE); inflict(FIRE[;] 1); sfx(~_fire~);,,MAX2|FREE1,,RED,change_power,decreaserange,,none,4,NO,NO,NO,,,,,,,,,,,,,
Dragon's Dagger_upgraded,Does [fire]<d6> Damage|Burns [fire]1 dice|[gray](Reuseable),2,attack(d[;] FIRE); inflict(FIRE[;] 1); sfxdamage(target[;]d);,,MAX2|FREE1,,RED,,decreaserange,,none,6,NO,NO,NO,,,,,,,,,,,,,
Trick Dice,Some trick dice,2,,,SPARE2|SPARE2|SPARE2|SPARE2,,GRAY,,,,none,0,YES,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Shotgun_upgraded,Do [sword]<d6> damage|[gray](Reuseable),1,attack(d); sfxdamage(target[;]d);,Plasma Gun,REQUIRE5|FREE5,,RED,,removereusable,,,2,NO,NO,NO,,,,,,,,,,,,,
Combat Nudge,Dice value -1|[gray](Reuseable),2,if(d >= 2) givedice(d - 1);,,MIN2,,GRAY,,,,none,4,YES,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Splitdle,Split Dice[;] Lose [heart]2 hp|[gray](Reuseable),1,pierceattackself(2); givedice(split(d)[;] ~splitdice~);,,MIN2,,RED,change_power,change_power,,,3,YES,NO,NO,,,,,,,,,,,,,
Quick Dice,Roll 2 extra dice,2,givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]);,,NORMAL,,GREEN,change_power,complicate,,,0,NO,NO,NO,,,,,,,,,,,,,
Quick Dice_upgraded,Roll 4 extra dice,2,givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]);,,NORMAL,,GREEN,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Chips,Heal [heal]1 health |on reducing countdown,1,//I love that i dont have to put on exec code,,COUNTDOWN,50,GREEN,change_power,noeffect,,,0,NO,YES,NO,,,,,,,,attackself(-1);,,,,,
Edgy Dagger,Do [sword] 10x<d6> to enemy[;]|but [sword] 5x<d6> to yourself|[gray](once per battle),2,attack(10 * d); attackself(5 * d); sfxdamage(target[;]5 * d);,,MAX2,,PURPLE,change_poison,decreaserange,,,0,NO,YES,NO,,,,,,,,,,,,,attackself(5 * d); sfxdamage(self[;]5 * d);
Edgy Dagger_upgraded,Inflict 10x<d6>[poison] to enemy[;]|but 8x<d6>[poison] to yourself|[gray](once per battle),2,inflict(POISON[;] 10 * d); inflictself(POISON[;] 8 * d); sfx(~_poison~);,,MAX2,,PURPLE,,,poison,,0,NO,YES,NO,,,,,,,,,,,,,inflictself(POISON[;] 8 * d); sfx(~_poison~);
Pocket Calculator,50% Chance to |Duplicate the dice|[gray](Reuseable?),1,var odds = 50; if(getstatusself(~luck~) > 0){ odds = 100; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); givedice([d[;]d]); } else{ if(!onlimit) roboterror(self[;] [e]); },,MIN4,,GREEN,simplify,decreaserange,,,-1,NO,NO,NO,hidereuseable,,,,,,,,,,,,
Spiky Dice,[red][110%]Spare Dice?[110%][red]|[gray](Reuseable),1,pierceattackself(7);,,SPARE1,,GRAY,reuseable,burnsparedice,,,3,YES,NO,NO,,,,,,,,,,,,,
Emergency 4,Lose [heart]4 health|[gray](once per battle),1,pierceattackself(4);,,SPARE4,,RED,change_poison,burnsparedice,,,0,YES,YES,NO,,,,,,,,,,,,,
Spring Break,Lose [heart]20 Hp|Heal [heal]25 hp,1,pierceattackself(20); attackself(-25);,,COUNTDOWN,50,YELLOW,quartercountdown,,,,0,NO,NO,NO,,,,,,,,,,,,,
Focus,Dice value +1|[gray](Reuseable),2,givedice(d + 1);,,MAX5,,BLUE,change_power,decreaserange,,,2,NO,NO,NO,,,,,,,,,,,,,
Focus_upgraded,Dice value +1|[gray](Reuseable),2,givedice(d + 1);,,MAX5,,CYAN,,,,,4,NO,NO,NO,,,,,,,,,,,,,
Yeet Gun,Do <d6> Damage[;]|In <d6> Turns[;] Inflict [fire]<d6>,1,attack(d); jinx(~YEET~[;]~take [fire]%VAR% burn~[;]~Take [fire]%VAR% burn~[;]~inflict(FIRE[;] %VAR%); sfxdamage(null[;]%VAR%);~[;]target[;]self[;]d[;](d));,,NORMAL,,RED,add2,complicate,,,0,NO,NO,NO,,,,,,,,,,,,,
Distraction,In <d6> Turns[;]| Inflict <double>[weaken] Weaken,1,jinx(~Distracted!~[;]~inflict [weaken]%VAR% weaken~[;]~Inflict [weaken]%VAR% weaken~[;]~inflict(WEAKEN[;] %VAR%); sfxdamage(null[;]%VAR%);~[;]self[;]target[;]d[;](d * 2)); sfx(~_thinghappens~);,,MAX3,,CYAN,increaserange,complicate,weaken,,2,NO,NO,NO,,,,,,,,,,,,,
Splitdle_upgraded,Split Dice[;]  Lose [heart]2 hp|[gray](Reuseable),1,pierceattackself(2); givedice(split(d)[;] ~splitdice~);,,MIN2,,RED,,,,,-1,YES,NO,NO,,,,,,,,,,,,,
Splitdle_downgraded,Split Dice[;]  Lose [heart]3 hp|[gray](Reuseable),1,pierceattackself(3); givedice(split(d)[;] ~splitdice~);,,RANGE24,,RED,,,,,3,YES,NO,NO,,,,,,,,,,,,,
Bump pick,Dice value +1|Split the dice,1,givedice(split(d + 1)[;] ~splitdice~); /*I would have put a hyphen in the name but y'know... Also I would like to add that splitdice just doesent work id d is higer than 6*/,,MAX5,,GREEN,change_power,decreaserange,,,0,YES,NO,NO,,,,,,,,,,,,,
Bump pick_upgraded,Dice value +1[;] Split dice|[gray](Reuseable),1,givedice(split(d + 1)[;] ~splitdice~);,,MAX5,,GREEN,,,,,2,YES,NO,NO,,,,,,,,,,,,,
Wallet,Gain [gold]10,1,self.gold += 10;,,,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Chips_upgraded,Heal [heal]4 health|on reducing countdown,1,,,COUNTDOWN,45,GREEN,,,,,0,YES,NO,NO,,,,,,,,attackself(-4);,,,,,
Steak Overflow,Recover [heal]9 health|immune to errors,1,attackself(-9); if(self.hp < self.maxhp) bonus(500 * 9);,,COUNTDOWN,12,GRAY,,,,,0,NO,NO,NO,errorimmune|robotonly,,,,,,,,,,,,
Steak Overflow_upgraded,Recover [heal]12 health|immune to errors,1,attackself(-12); if(self.hp < self.maxhp) bonus(500 * 12);,,COUNTDOWN,12,GRAY,,,,,0,NO,NO,NO,errorimmune|robotonly,,,,,,,,,,,,
Steak Overflow_downgraded,Recover [heal]6 health|immune to errors,1,attackself(-6); if(self.hp < self.maxhp) bonus(500 * 6);,,COUNTDOWN,12,GRAY,,,,,0,NO,NO,NO,errorimmune|robotonly,,,,,,,,,,,,
Glass Salad,If above 1 HP[;]Lose all but 1 hp[;]|Increase max health by 3|[gray](once per battle),2,if(self.hp >= 1) { pierceattackself(self.hp -1); self.maxhp+=3; },,DOUBLES|DOUBLES,,RED,change_power,change_power,,,0,NO,YES,NO,,,,,,,,,,,,,
Countflower,+1 to countdown reduction|[gray](Start of turn: Reduce by <evar:boost>),1,e.setvar(~boost~[;]e.getvar(~boost~) + 1); sfx(~_magic~);,,COUNTDOWN,8,ORANGE,change_power,change_power,,,0,YES,NO,NO,weakenavoid,,e.setvar(~boost~[;]1);,,,e.animate(~flashandshake~); sfx(~_magic~); boostcountdowns(e.getvar(~boost~));,,,,,,,
Countflower_upgraded,Reduce counts by <evar:boost>[;]|+1 each use|(Start of turn: reduce by <evar:boost>),1,boostcountdowns(e.getvar(~boost~)); e.setvar(~boost~[;]e.getvar(~boost~) + 1); sfx(~_magic~);,,COUNTDOWN,8,ORANGE,,,,,0,YES,NO,NO,,,e.setvar(~boost~[;]1);,,,e.animate(~flashandshake~); sfx(~_magic~); boostcountdowns(e.getvar(~boost~));,,,,,,,
Countflower_downgraded,No Effect,1,e.setvar(~boost~[;]e.getvar(~boost~));,,COUNTDOWN,11,ORANGE,,,,,0,YES,NO,NO,,,e.setvar(~boost~[;]1);,,,,,,,,,,
Hunter's Rage,Gain [fury] Fury,1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY);,,EVEN,,RED,simplify,complicate,,,0,NO,YES,NO,,,,,,,,,,,,,
Emergency 5,Lose [heart]4 health|[gray](once per battle),1,pierceattackself(4);,,SPARE5,,RED,change_power,burnsparedice,,,0,YES,YES,NO,,,,,,,,,,,,,
Emergency 6,Lose [heart]4 health|[gray](once per battle),1,pierceattackself(4);,,SPARE6,,RED,change_power,burnsparedice,,,0,YES,YES,NO,,,,,,,,,,,,,
ImpHail,Do [ice]2 damage[;]|Do [fire]3 damage|[gray](Reuseable),1,attack(2[;] ICE); attack(3[;] FIRE); sfx(~_fire~); sfx(~_ice~);,,COUNTDOWN,7,PURPLE,change_power,change_power,,,2,NO,NO,NO,,1,,,,,,,,,,,
ImpHail_upgraded,Do [ice]2 damage[;]|Do [fire]3 damage|[gray](Reuseable),1,attack(2[;] ICE); attack(3[;] FIRE); sfx(~_fire~); sfx(~_ice~);,,COUNTDOWN,7,PURPLE,,,,,3,NO,NO,NO,,,,,,,,,,,,,
ImpHail_downgraded,Do [ice]1 damage[;]|Do [fire]2 damage|[gray](Reuseable),1,,,COUNTDOWN,7,PURPLE,,,,,2,NO,NO,NO,,,,,,,,,,,,,
Twin Pin,Do [sword]<d6> damage|[gray](Reuseable),1,attack(d); sfxdamage(target[;]d);,,REQUIRE2|FREE2,,RED,change_power,change_power,,,3,NO,NO,NO,,,,,,,,,,,,,
Twin Pin_upgraded,Do [sword]<d6> damage|[gray](Reuseable),1,attack(d); sfxdamage(target[;]d);,,REQUIRE2|FREE2,,RED,,,,,-1,NO,NO,NO,,,,,,,,,,,,,
Twin Pin_downgraded,Do [sword]<d6> damage|[gray](Reuseable),1,attack(d); sfxdamage(target[;]d);,,REQUIRE2,,RED,,,,,3,NO,NO,NO,,,,,,,,,,,,,
Pin's Twin,Do [sword]2 damage|Roll a 2|[gray](Reuseable),1,givedice(2); attack(2); sfx(~splitdice~); sfxdamage(target[;]2);,,COUNTDOWN,3,GREEN,change_power,change_power,,,2,NO,NO,NO,,,,,,,,,,,,,
Pin's Twin_upgraded,Do [sword]2 damage|Roll a 2|[gray](Reuseable),1,givedice(2); attack(2); sfx(~splitdice~); sfxdamage(target[;]2);,,COUNTDOWN,3,GREEN,,,,,3,NO,NO,NO,,,,,,,,,,,,,
Pin's Twin_downgraded,Roll a 2,1,givedice(2); sfx(~splitdice~);,,COUNTDOWN,3,GREEN,,,,,2,NO,NO,NO,,,,,,,,,,,,,
Hot Pepper Cookie,Gain [fury] Fury|[gray](Self inflict [fire]3 burn),1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY);,,COUNTDOWN,9,ORANGE,change_power,,,,0,YES,NO,NO,,,,,inflictself(FIRE[;]3); sfx(~_fire~);,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Hot Pepper Cookie_upgraded,Gain [fury] Fury|[gray](Self inflict [fire]3 burn),1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY);,,COUNTDOWN,7,ORANGE,,,,,0,YES,NO,NO,,,,,inflictself(FIRE[;]3); sfx(~_fire~);,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Sharpened Straw,Odd: [sword]<d6> damage|Even: [heart]<d6> drain,2,if(d%2 == 0){ drain(d); sfx(~_drain~); } else { attack(d); sfxdamage(target[;]d); },,MAX5,,RED,change_power,decreaserange,,,0,NO,NO,NO,,,,,,,,,,,,,
Sharpened Straw_upgraded,Even: [sword]<d6> damage|Odd: [heart]<d6> drain,2,if(d%2 == 0){ attack(d); sfxdamage(target[;]d); } else { drain(d); sfx(~_drain~); },,MAX5,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Emergency 4_upgraded,Lose [heart]4 health,1,pierceattackself(4);,,SPARE4,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Emergency 5_upgraded,Lose [heart]4 health,1,Pierceattackself(4);,,SPARE5,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Emergency 6_upgraded,Lose [heart]4 health,1,pierceattackself(4);,,SPARE6,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Hail's Imp,Do [fire]2 damage[;]|Do [ice]3 damage|[gray](Reuseable),1,attack(2[;] FIRE); attack(3[;] ICE); sfx(~_ice~); sfx(~_fire~);,,COUNTDOWN,7,PINK,change_power,change_power,,,2,NO,NO,NO,,1,,,,,,,,,,,
Hail's Imp_upgraded,Do [fire]2 damage[;]|Do [ice]3 damage|[gray](Reuseable),1,attack(2[;] FIRE); attack(3[;] ICE); sfx(~_ice~); sfx(~_fire~);,,COUNTDOWN,7,PINK,,,,,3,NO,NO,NO,,,,,,,,,,,,,
Hail's Imp_downgraded,Do [fire]1 damage[;]|Do [ice]2 damage|[gray](Reuseable),1,attack(1[;] FIRE); attack(2[;] ICE); sfx(~_ice~); sfx(~_fire~);,,COUNTDOWN,7,PINK,,,,,2,NO,NO,NO,,,,,,,,,,,,,
Underwhelm,[sword]<timesused> dmg[;] +[sword]1 each use|[gray](Reuseable),1,attack(e.timesused+1); sfxdamage(target[;]e.timesused+1);,,COUNTDOWN,6,RED,change_power,removereusable,,,2,NO,NO,NO,,,,,,,,,,,,,
Underwhelm_upgraded,[sword]<timesused> dmg[;] +[sword]1 each use|[gray](Reuseable),1,attack(e.timesused+1); sfxdamage(target[;]e.timesused+1);,,COUNTDOWN,6,RED,,,,,3,NO,NO,NO,,,,,,,,,,,,,
Gradd,Do [sword]<d6> dmg[;] Reroll dice|,1,attack(d); givedice(); sfxdamage(target[;]d);,,REQUIRE1,,GRAY,add1,change_power,,,2,NO,NO,NO,,1,,,,,,,,,,,givedice();
Gradd_upgraded,Do [sword]<d6> dmg[;] Reroll dice|,1,attack(d); givedice(); sfxdamage(target[;]d);,,REQUIRE1|FREE1,,GRAY,,,,,3,NO,NO,NO,,,,,,,,,,,,,givedice();
Gradd_downgraded,Get a new dice|,1,givedice();,,REQUIRE1,,GRAY,,,,,4,YES,NO,NO,,,,,,,,,,,,,
Shrek,Curse enemy,1,inflict(CURSE);,,REQUIRE2|REQUIRE3,,PURPLE,change_power,noeffect,,,0,NO,NO,NO,,,,,,,,,,,,,
Shrek_upgraded,Curse enemy,1,inflict(CURSE);,,RANGE25|RANGE35,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Lowplicate,Dice value -2[;] then Duplicate|[gray](Reuseable),1,givedice([d-2[;]d-2]);,,MIN3,,GREEN,change_power,decreaserange,,,2,YES,NO,NO,,,,,,,,,,,,,
Lowplicate_upgraded,Dice value -2[;] then Duplicate|[gray](Reuseable),1,givedice([d-2[;]d-2]);,,MIN3,,GREEN,,,,,3,YES,NO,NO,,,,,,,,,,,,,
Scare 2,2 Twos,1,,,SPARE2|SPARE2,,YELLOW,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Lantwern,Get 2 2s next turn[;]|Return the dice,1,inflictself(~stash~+2[;]2); inflictself(~lantern~); givedice([d[;] d]);,,REQUIRE2|REQUIRE2,,YELLOW,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Lantwern_upgraded,Get 3 2s next turn[;]|Return the dice,1,inflictself(~stash~+2[;]3); inflictself(~lantern~); givedice([d[;] d]);,,REQUIRE2|REQUIRE2,,YELLOW,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Jemmy,Reduce counts by <double>,1,boostcountdowns(d*2);,,MAX2|MAX3,,GREEN,change_power,decreaserange,,,0,YES,NO,NO,,,,,,,,,,,,,
Jemmy_upgraded,Reduce counts by <double>|,1,boostcountdowns(d*2);,,MAX2|MAX3,,GREEN,,,,,2,YES,NO,NO,,,,,,,,,,,,,
Glass Salad_weakened,Lose all but 1 hp[;]|Increase max health by 3|[gray](once per battle),1,if(self.hp >= 1) { pierceattackself(self.hp -1); self.maxhp+=3; },,MIN5|MIN5,,RED,,,,,0,NO,YES,NO,,,,,,,,,,,,,
Glass Salad_downgraded,Lose all but 1 hp[;]|Increase max health by 3|[gray](once per battle),2,if(self.hp >= 1) { pierceattackself(self.hp -1); self.maxhp+=3; },,MIN5|MIN5,,RED,,,,,0,NO,YES,NO,,,,,,,,,,,,,
Glass Salad_deckupgrade,Lose all but 1 hp[;]|Increase max health by 3|[gray](once per battle),2,if(self.hp >= 1) { pierceattackself(self.hp -1); self.maxhp+=3; },,NORMAL|NORMAL,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Glass Salad_upgraded,If above 1 HP[;]Lose all but 1 hp[;]|Increase max health by 3,2,if(self.hp >= 1) { pierceattackself(self.hp -1); self.maxhp+=3; },,DOUBLES|DOUBLES,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Explosive Antidote,Do [sword]2 per [poison] on the enemy|Cure ALL their [poison]Poison,1,attack(getstatus(POISON) * 2); removestatus(POISON[;]ALL);,,DOUBLES|DOUBLES,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,removestatus(POISON[;]ALL);
Explosive Antidote_upgraded,Do [sword]2 per [poison] on the enemy|Cure ALL their [poison]Poison,1,attack(getstatus(POISON) * 2); removestatus(POISON[;]ALL);,,EVEN,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,removestatus(POISON[;]ALL);
Explosive Antidote_downgraded,Do [sword]1 per [poison] on the enemy|Cure ALL their [poison]Poison,1,attack(getstatus(POISON)); removestatus(POISON[;]ALL);,,DOUBLES|DOUBLES,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,removestatus(POISON[;]ALL);
Crow's Wall,Reduce countdowns by <d6>|[gray](Reuseable),1,boostcountdowns(d); boostcountdowns(d);,,DOUBLES|DOUBLES,,GREEN,change_power,removereusable,,,-1,NO,NO,NO,,,,,,,,,,,,,
Crow's Wall_upgraded,Reduce countdowns by <d6>|[gray](Reuseable),1,boostcountdowns(d);,,NORMAL|NORMAL,6,GREEN,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Rexing Fall,Take [sword]4[;] Boost counts by 6|[gray](Reuseable),1,boostcountdowns(6); attackself(4);,,REQUIRE1,,RED,reuseable,removereusable,,,2,YES,NO,NO,,,,,,,,,,,,,
Mirror's Edge,Do [sword]2[;] +1 dice this fight|[gray](Reuseable),1,if(simulation) { bonus(1000); } else{ attack(2); self.extradice++; },,REQUIRE6|EVEN,,PURPLE,change_power,complicate,,,2,NO,NO,NO,,,,,,,,,,,,,
Mirror's Edge_upgraded,Do [sword] 2[;] +1 dice this fight|[gray](Reuseable),1,if(simulation) { bonus(1000); } else{ attack(2); self.extradice++; },,REQUIRE6|NORMAL,,PURPLE,,,,,2,NO,NO,NO,,,,,,,,,,,,,
Glock,Do [shield]<d6> Damage|[gray](Reuseable),2,attack(d[;] SHIELD); sfx(~_shield~);,,MIN5,,RED,reducesize,removereusable,,,2,NO,NO,NO,,,,,,,,,,,,,
New Moon Charm,Roll a six and a four,1,givedice([6[;] 4]);,,COUNTDOWN,9,GREEN,twothirdcountdown,change_power,,,0,YES,NO,NO,,,,,,,,,,,,,
New Moon Charm_downgraded,Roll a Four,1,givedice([4]);,,,,GREEN,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Snek Sphere Charm,Roll 3 Ones,1,givedice([1[;] 1[;] 1]);,,COUNTDOWN,8,GREEN,change_power,change_power,,,0,YES,NO,NO,,,,,,,,,,,,,
Snek Sphere Charm_upgraded,Roll 4 Ones,1,givedice([1[;] 1[;] 1[;] 1]);,,COUNTDOWN,8,GREEN,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Snek Sphere Charm_downgraded,Roll 2 ones,1,givedice([1[;] 1]);,,,,GREEN,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Legger,[sword]1 damage per unused dice|[gray](Reuseable),1,var temp = 0; for(d in self.dicepool) { if(d.available()) temp++; } attack((temp + 1)); sfxdamage(target[;] temp + 1);,,ODD,,RED,change_power,removereusable,,,2,NO,NO,NO,,,,,,,,,,,,,
Banter,Gain [reduce]3 Reduce[;]|Gain [recycle]1 Re-equip,1,inflictself(REEQUIPNEXT); inflictself(REDUCE[;] 3);,,MIN3|MIN3,,RED,change_power,,,,0,YES,NO,NO,,,,,,,,,,,,,
Banter_upgraded,Gain [reduce]3 Reduce[;]|Gain [recycle]1 Re-equip,1,inflictself(REEQUIPNEXT); inflictself(REDUCE[;] 3);,,MIN5,,RED,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Banter_downgraded,Gain [reduce]1 Reduce[;]|Gain [recycle]1 Re-equip,1,inflictself(REEQUIPNEXT); inflictself(REDUCE[;] 1);,,,,RED,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Can O' Beans,Roll 2 Fives,1,givedice([5[;] 5]);,,COUNTDOWN,7,YELLOW,twothirdcountdown,noeffect,,,0,YES,NO,NO,,,,,,,,,,,,,
Stormy Day,Inflict [lock]2 And[weaken]2[;]|But give the enemy [fury]Fury,1,inflict(WEAKEN[;] 2); inflict(LOCK[;] 2); inflict(FURY);,,COUNTDOWN,8,GRAY,threequartercountdown,change_power,,,0,NO,NO,NO,,,,,,,,,,,,,
Stormy Day_downgraded,Inflict [weaken]2 Weaken[;]|But give the enemy [fury]Fury,1,inflict(WEAKEN[;] 2); inflict(FURY);,,,,GRAY,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Combat Hatchet,Do [sword]<double> damage|[gray](Reuseable),1,attack(d * 2); bonus(200); sfxdamage(target[;]d * 2);,,MAX2,,YELLOW,increaserange,removereusable,,,3,NO,NO,NO,,,,,,,,,,,,,
Crow's Egg,Lower counts by 2[;] Heal [heal]1|[gray](Reuseable),1,boostcountdowns(2); attackself(-1); sfx(~_heal~);,,ODD,,GREEN,change_power,removereusable,,,2,YES,NO,NO,,,,,,,,,,,,,
Crow's Egg_upgraded,Lower counts by 3[;] Heal [heal]1|[gray](Reuseable),1,boostcountdowns(3); attackself(-1);,,ODD,,GREEN,,,,,2,NO,NO,NO,,,,,,,,,,,,,
Snoot,Do [sword]3 damage|Recover [heal]3 health,1,attack(3); attackself(-3); sfx(~_heal~); sfxdamage(target[;]3);,,COUNTDOWN,7,YELLOW,change_power,change_power,,,0,NO,NO,NO,,,,,,,,,,,,,attackself(-3); sfx(~_heal~)
Snoot_downgraded,Do [sword]2 damage|Recover [heal]2 health,1,attack(2); attackself(-2); sfx(~_heal~); sfxdamage(target[;]2);,,COUNTDOWN,7,YELLOW,,,,,,NO,NO,NO,,,,,,,,,,,,,attackself(-2); sfx(~_heal~)
Snoot_upgraded,Do [sword]4 damage|Recover [heal]4 health,1,attack(4); attackself(-4); sfx(~_heal~); sfxdamage(target[;]4);,,COUNTDOWN,7,YELLOW,,,,,0,NO,NO,NO,,,,,,,,,,,,,attackself(-4); sfx(~_heal~)
Glock_downgraded,Do [shield]<d6> Damage,1,attack(d[;] SHIELD); sfx(~_shield~);,,,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Poison Darts,Add [poison]2 poison|[gray](Reuseable),1,inflict(POISON[;] 2);,,COUNTDOWN,6,PURPLE,change_power,removereusable,,,2,NO,NO,NO,,,,,,,,,,,,,
Poison Darts_upgraded,Add [poison]2 poison|[gray](Reuseable),1,inflict(POISON[;] 2);,,COUNTDOWN,6,PURPLE,,,,,3,NO,NO,NO,,,,,,,,,,,,,
Trapped Rat,Inflict [poison]1 poison[;]|Roll a burning dice|,1,inflict(POISON); inflictself(FIRE); givedice();,,COUNTDOWN,6,PURPLE,change_power,removereusable,,,2,NO,NO,NO,,,,,,,,,,,,,inflictself(FIRE); givedice();
Crow,Lower countdowns by 4[;]|roll a new dice|,1,boostcountdowns(4); givedice();,,COUNTDOWN,8,GREEN,change_power,removereusable,,,2,YES,NO,NO,,,,,,,,,,,,,
Crow_upgraded,Lower countdowns by 4[;]|roll a new dice|,1,boostcountdowns(4); givedice();,,COUNTDOWN,8,GREEN,,,,,4,YES,NO,NO,,,,,,,,,,,,,
Legger_upgraded,[sword]1 damage per unused dice|[gray](Reuseable),1,var temp = 0; for(d in self.dicepool) { if(d.available()) temp++; } attack((temp + 1)); sfxdamage(target[;] temp + 1);,,ODD,,RED,,,,,3,NO,NO,NO,,,,,,,,,,,,,
Plasma Drainer,Drain [heart]6 health,1,drain(6); sfxdamage(target[;]7); sfx(~_drain~);,,COUNTDOWN,20,RED,change_power,change_power,,,0,NO,NO,NO,,,,,,,,,,,,,
Plasma Drainer_upgraded,Drain [heart]6 health[;]|Do [sword]2 damage,1,drain(6); attack(2); sfxdamage(target[;]8); sfx(~_drain~);,,COUNTDOWN,20,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Plasma Drainer_downgraded,Drain [heart]4 health,1,drain(4); sfxdamage(target[;]4); sfx(~_drain~);,,COUNTDOWN,20,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Mirror Slash,+1 dice[;]|Do [sword]2 for each dice you roll,1,self.extradice++; var attackamount = self.dice + self.bonusdice + self.extradice; attack(attackamount * 2); sfxdamage(target[;]attackamount*2); sfx(~_magic~);,,COUNTDOWN,30,PURPLE,change_power,change_power,,,0,NO,NO,NO,,,,,,,,,,,,,
Mirror Slash_upgraded,+1 dice[;]|Do [sword]3 for each dice you roll,1,self.extradice++; var attackamount = self.dice + self.bonusdice + self.extradice; attack(attackamount * 3); sfxdamage(target[;]attackamount*3); sfx(~_magic~);,,COUNTDOWN,30,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Mirror Slash_downgraded,+1 dice[;]|Do [sword]1 for each dice you roll,1,self.extradice++; var attackamount = self.dice + self.bonusdice + self.extradice; attack(attackamount); sfxdamage(target[;]attackamount); sfx(~_magic~);,,COUNTDOWN,30,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Vampiric Grasp,Steal [heart]2 Max Hp|(Start of fight: half max HP),1,target.maxhp-=2; pierceattack(2); self.maxhp+=2; pierceattackself(-2); sfx(~_drain~);,,COUNTDOWN,12,RED,change_power,change_power,,,0,NO,NO,NO,,,self.maxhp-=(self.maxhp/2); self.hp=(self.maxhp);,,,,,,,,,,
Vampiric Grasp_upgraded,Steal [heart]2 Max Hp|(Start of fight: [heart]-15 Max Hp),1,target.maxhp-=2; pierceattack(2); self.maxhp+=2; pierceattackself(-2); sfx(~_drain~);,,COUNTDOWN,12,RED,,,,,0,NO,NO,NO,,,self.maxhp-=15; self.hp-=15;,,,,,,,,,,
Vampiric Grasp_downgraded,Steal [heart]1 Max Hp|(Start of fight: half max HP),1,target.maxhp-=1; pierceattack(1); self.maxhp+=1; pierceattackself(-1); sfx(~_drain~);,,COUNTDOWN,12,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Wacker Dacker,[sword]<d6>[;] enemy gets [reduce]1|[gray](Reuseable),1,attack(d); sfxdamage(target[;]d); inflict(REDUCE); sfx(~_reduce~);,,MAX4|FREE2,,YELLOW,change_power,change_power,,,-1,NO,NO,NO,,,,,,,,,,,,,
Wacker Dacker_upgraded,[sword]<d6>[;] enemy gets [reduce]1|[gray](Reuseable),1,attack(d); sfxdamage(target[;]d); inflict(REDUCE); sfx(~_reduce~);,,MAX4|FREE3,,YELLOW,,,,,-1,NO,NO,NO,,,,,,,,,,,,,
Wacker Dacker_downgraded,[sword]<d6>[;] enemy gets [reduce]1|[gray](Reuseable),1,attack(d); sfxdamage(target[;]d); inflict(REDUCE); sfx(~_reduce~);,,MAX4,,YELLOW,,,,,-1,NO,NO,NO,,,,,,,,,,,,,
Trapped Rat_upgraded,Inflict [poison]1 poison[;]|Roll a burning dice|,1,inflict(POISON); inflictself(FIRE); givedice();,,COUNTDOWN,6,PURPLE,,,,,3,YES,NO,NO,,,,,,,,,,,,,inflictself(FIRE); givedice();
Omegathrow,Throw all your dice[;]|And do [sword]1 damage per dice,1,var temp = 0; for(d in self.dicepool) { if(d.available()) temp++; throwdice(self[;] target); } attack((temp + 2));,,NORMAL,,RED,change_power,complicate,,,0,NO,NO,NO,,,,,,,,,,,,,
Omegathrow_upgraded,Throw all your dice[;]|And do [sword]2 damage per dice,1,var temp = 0; for(d in self.dicepool) { if(d.available()) temp++; throwdice(self[;] target); } attack((temp*2 + 3));,,NORMAL,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Tetrashootia,Do [sword]2 damage |[gray](Reusable),1,attack(2); sfxdamage(target[;]3);,,COUNTDOWN,4,PINK,change_power,removereusable,,,4,NO,NO,NO,,,,,,,,,,,,,
Tetrashootia_upgraded,Do [sword]3 damage|[gray](Reusable),1,attack(3); sfxdamage(target[;]3);,,COUNTDOWN,4,PINK,,,,,4,NO,NO,NO,,,,,,,,,,,,,
Miner Forty Niner,Weaken [weaken]4 equipment[;]|do [weaken]9 damage|[gray](Reuseable),1,inflict(WEAKEN[;] 4); attack(9[;]WEAKEN); sfxdamage(target[;]9);,,COUNTDOWN,49,ORANGE,reuseable,removereusable,,,49,NO,NO,NO,,,,,,,,,,,,,
Red Glare,Do [fire]2 damage for|each status inflicted,1,var statuseffectcount = getstatus(ALL); if(statuseffectcount == 0) { target.textparticle(~No effect!~); } else{ attack(statuseffectcount*2[;]FIRE); },,COUNTDOWN,24,RED,change_power,noeffect,,,0,NO,NO,NO,,,,,,,,,,,,,
Red Glare_upgraded,Do [fire]4 damage for|each status inflicted,1,var statuseffectcount = getstatus(ALL); if(statuseffectcount == 0) { target.textparticle(~No effect!~); } else{ attack(statuseffectcount*4[;] FIRE); },,COUNTDOWN,24,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Bite,Drain [heart]2 health|,1,Drain(2); sfx(~_drain~);,,COUNTDOWN,8,RED,change_power,change_power,,,3,NO,NO,NO,,,,,,,,,,,,,
Bite_downgraded,Drain [heart]1 health|,1,Drain(1); sfx(~_drain~);,,COUNTDOWN,8,RED,,,,,3,NO,NO,NO,,,,,,,,,,,,,
Bite_upgraded,Drain [heart]2 health|,1,Drain(2); sfx(~_drain~);,,COUNTDOWN,8,RED,,,,,-1,NO,NO,NO,,,,,,,,,,,,,
Jankery,Do [gray][130%]Something... |[gray](Once),1,var num = rand([0[;]1[;]2[;]3[;]4[;]5[;]6[;]7[;]8[;]9[;]10]); if(num == 1){ drain(d); } else if(num == 2){self.extradice++;} else if(num == 3){ pierceattackself(8); sfx(~_drain~); } else if(num == 4){ inflictself(POISON[;]69); } else if (num == 4){attack(d*3);} else if(num == 5) {attackself(d*3);} else if (num == 6) {var temp = 0; for(d in self.dicepool) { if(d.available()) temp++; throwdice(self[;] target); } attack((temp + 2));} else if(num == 7){attack(d[;] SHIELD); sfx(~_shield~);} else if(num == 8) {inflict(POISON[;] 10 * d); inflictself(POISON[;] 8 * d); sfx(~_poison~);} else if (num == 9) {inflictself(REEQUIPNEXT); inflictself(REDUCE[;] 3);} else if(num == 10) {givedice([d[;]d]);} else if(num == 0){attack(1); sfxdamage(target[;]999);} else {trace(~Modding is over~);},,NORMAL,,RED,change_power,change_power,,,,NO,YES,NO,,,,,,,,,,,,,
Jankery_upgraded,Do [gray][130%]Something...[][]|But better [gray](Once),1,var num = rand([0[;]1[;]2[;]3[;]4[;]5[;]6[;]7[;]8[;]9[;]10]); if(num == 1){ drain(d+2); } else if(num == 2){self.extradice++;} else if(num == 3){ pierceattackself(10); sfx(~_drain~); } else if(num == 4){ inflictself(POISON[;]420); } else if (num == 4){attack(d*3);} else if(num == 5) {boomerang(d+16);} else if (num == 6) {var temp = 0; for(d in self.dicepool) { if(d.available()) temp++; throwdice(self[;] target); } attack((temp * 4));} else if(num == 7){attack(d+8[;] SHIELD); sfx(~_shield~);} else if(num == 8) {inflict(POISON[;] 20 * d); inflictself(POISON[;] 10 * d); sfx(~_poison~);} else if (num == 9) {inflictself(REEQUIPNEXT); inflictself(REDUCE[;] 4);} else if(num == 10) {givedice([d[;]d[;]d]);} else if(num == 0){attack(999); sfxdamage(target[;]1);} else {trace(~Modding is over~);},,NORMAL,,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Jankery_downgraded,Do [gray][130%]Nothing...,1,,,NORMAL,,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Aaron,Inflict 2 [fire]BALLER!!!,1,inflict(~baller~[;] 2);,,NORMAL,,RED,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,
Aaron_upgraded,Inflict 3 [fire]BALLER!!!,1,inflict(~baller~[;] 3);,,NORMAL,,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Bolt Pouch,Gain 2[bow]Charge,1,inflictself(~charge~[;]2); sfx(~_magic~);,,COUNTDOWN,6,YELLOW,change_power,change_power,,,,YES,NO,NO,,,,,,,,,,,,,
Bolt Pouch_upgraded,Gain 3[bow]Charge,1,inflictself(~charge~[;]3); sfx(~_magic~);,,COUNTDOWN,6,YELLOW,,,,,,YES,NO,NO,,,,,,,,,,,,,
Bolt Pouch_downgraded,Gain 1[bow]Charge[;] and 2 [poison],1,inflictself(~charge~); inflictself(~poison~[;]2); sfx(~_magic~); sfx(~_poison~);,,COUNTDOWN,6,YELLOW,,,,,,YES,NO,NO,,,,,,,,,,,,,
Longbow,Bash with [bow]Charge +3[;]|but lose all charge,1,sfxdamage(target[;]getstatusself(~charge~)+3); attack(getstatusself(~charge~)+3); removestatusself(~charge~| ALL);,,MIN2,,RED,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,
Longbow_upgraded,Bash with [bow]Charge +3|but lose 4 charge,1,sfxdamage(target[;]getstatusself(~charge~)+3); attack(getstatusself(~charge~)+3); removestatusself(~charge~| 4);,,MIN2,,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Longbow_downgraded,Bash with [bow]Charge[;]|but lose 3 charge,1,sfxdamage(target[;]getstatusself(~charge~)); attack(getstatusself(~charge~)); removestatusself(~charge~| 3);,,MIN2,,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Energy To Blood,Spend 3 [bow]Charge to| [heal]heal 5|,1,if(getstatusself(~charge~) <= 2) { self.textparticle(~No effect!~); } else { attackself(-5); removestatusself(~charge~| 3); sfx(~_heal~); },,NORMAL,,GREEN,change_power,change_power,,,-1,YES,NO,NO,,,,,,,,,,,,,
Energy To Blood_upgraded,Spend 2 [bow]Charge to| [heal]heal 5|,1,if(getstatusself(~charge~) <= 1) { self.textparticle(~No effect!~); } else { attackself(-5); removestatusself(~charge~| 2); sfx(~_heal~); },,NORMAL,,GREEN,,,,,-1,YES,NO,NO,,,,,,,,,,,,,
Energy To Blood_downgraded,Spend 4 [bow]Charge to| [heal]heal 4|,1,if(getstatusself(~charge~) <= 3) { self.textparticle(~No effect!~); } else { attackself(-4); removestatusself(~charge~| 4); sfx(~_heal~); },,NORMAL,,GREEN,,,,,,YES,NO,NO,,,,,,,,,,,,,
Energized Blade,Spend <d6> + 2 Charge to|Do<double> Damage,1,if(getstatusself(~charge~) <= d+1) { self.textparticle(~No effect!~); } else { attack(d*2); removestatusself(~charge~| 4); },,MAX4,,RED,increaserange,decreaserange,,,,NO,NO,NO,,,,,,,,,,,,,
Prepared Entrance,Start each fight with|2 [bow]Charge,1,,,,,CYAN,change_power,noeffect,,,,NO,NO,NO,,,,,,if(turn == 1) { e.animate(~flashandshake~); e.changecolour(~GRAY~); inflictself(~charge~|2); sfx(~_magic~); },,,,,,,
Prepared Entrance_upgraded,Start each fight with|3 [bow]Charge,1,,,,,CYAN,,,,,,NO,NO,NO,,,,,,if(turn == 1) { e.animate(~flashandshake~); e.changecolour(~GRAY~); inflictself(~charge~|3); sfx(~_magic~); },,,,,,,
Compound Bow,Bash with [bow]Charge,1,sfxdamage(target[;]getstatusself(~charge~)); attack(getstatusself(~charge~));,,COUNTDOWN,12,RED,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,
Compound Bow_upgraded,Bash with [bow]Charge,1,sfxdamage(target[;]getstatusself(~charge~)); attack(getstatusself(~charge~));,,COUNTDOWN,10,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Compound Bow_downgraded,Bash with [bow]Charge[;]|but lose all charge,1,sfxdamage(target[;]getstatusself(~charge~)); attack(getstatusself(~charge~)); removestatusself(~charge~| getstatusself(~charge~));,,COUNTDOWN,12,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Arrow Tip,Gain [bow] equal to the 1st dice[;]|And do [sword] equal to the 2nd dice,1,inflictself(~charge~[;]actualdice[0].basevalue); attack(actualdice[1].basevalue);,,MAX2|MIN4,,RED,increaserange,decreaserange,,,,NO,NO,NO,,,,,,,,,,,,,
Power Suit,Gain [shield]shield equal to your|[bow]Charge - <double>,1,inflictself(SHIELD[;]getstatusself(~charge~)-d*2);,,MIN3,,ORANGE,change_power,noeffect,,,,YES,NO,NO,,,,,,,,,,,,,
Power Suit_upgraded,Gain [shield]shield equal to your|[bow]Charge - <d6>,1,inflictself(SHIELD[;]getstatusself(~charge~)-d);,,MIN3,,ORANGE,,,,,,YES,NO,NO,,,,,,,,,,,,,
Dragon's Saddle,Do [sword]3 damage[;]|on 6[;] gain 2 [bow]Charge,1,attack(3); if(d == 6) { inflictself(~charge~|2); sfxdamage(target|3);  sfx(~_magic~); } else { sfxdamage(target|3); },,NORMAL,,RED,change_power,change_power,,,0,NO,NO,NO,,1,,,,,,,,,,,
Dragon's Saddle_upgraded,Do [sword]3 damage[;]|on even[;] gain 2 [bow]Charge,1,attack(3); if(d % 2 == 0) { inflictself(~charge~|2); sfxdamage(target|3);  sfx(~_magic~); } else { sfxdamage(target|3); },,NORMAL,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Dragon's Saddle_downgraded,Do [sword]3 damage[;]|on 3[;] gain 2 [bow]Charge,1,attack(3); if(d == 3) { inflictself(~charge~|2); sfxdamage(target|3);  sfx(~_magic~); } else { sfxdamage(target|3); },,MAX3,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Quiver,Do [sword]1 damage[;] reroll dice|(Cost [bow]2[]: return two dice),1,if(getstatusself(~charge~) > 1) { removestatusself(~charge~|2); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else { givedice(); } attack(1);,,NORMAL,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,,1,,,,,,,,,,if(getstatusself(~charge~) > 0) { removestatusself(~charge~|1); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else { givedice(); },
Quiver_upgraded,Do [sword]1 damage[;] reroll dice|(Cost [bow]2[]: return two dice)|[gray](Reuseable),1,if(getstatusself(~charge~) > 1) { removestatusself(~charge~|2); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else { givedice(); } attack(1);,,NORMAL,,BRIGHTCYAN,,,,,2,NO,NO,NO,,,,,,,,,,,,if(getstatusself(~charge~) > 0) { removestatusself(~charge~|1); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else { givedice(); },
Quiver_downgraded,Do [sword]1 damage,1,attack(1);,,NORMAL,,BRIGHTCYAN,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Atomic Microscope,Double dice value|(Cost [bow]2[]: instead[;] triple),1,if(getstatusself(~charge~) >= 2) { removestatusself(~charge~|2); givedice(d * 3| ~combinedice~); } else { givedice(d * 2| ~combinedice~); } ,Clone Device,MAX3,,YELLOW,change_requirements,complicate,,,0,YES,NO,NO,,1,,,,,,,,,,,
Atomic Microscope_upgraded,Double dice value|(Cost [bow]2[]: instead[;] triple),1,if(getstatusself(~charge~) >= 2) { removestatusself(~charge~|2); givedice(d * 3| ~combinedice~); } else { givedice(d * 2| ~combinedice~); } ,Clone Device,NORMAL,,YELLOW,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Laserbeam@yeeboibecausethisisprobobalyinanothemod,Do [sword]5 damage|(Cost [bow]5[]: double damage),1,if(getstatusself(~charge~) >= 5) { removestatusself(~charge~|5); attack(10); sfxdamage(target[;]10); } else { attack(5); sfxdamage(target[;]5); } ,,EVEN,,YELLOW,simplify,complicate,,,0,NO,NO,NO,,1,,,,,,,,,,,
Gun Power Pit,Do [sword]1 damage[;] reroll dice|(If [bow]>=6: return 5 or 6),1,if(getstatusself(~charge~) >= 6) { givedice(rand([5|6])); } else { givedice(); } attack(1);,,NORMAL,,PURPLE,change_power,change_power,,,0,NO,NO,NO,,1,,,,,,,,,,if(getstatusself(~charge~) >= 6) { givedice(rand([5|6])); } else { givedice(); },
Gun Power Pit_upgraded,Do [sword]1 damage[;] reroll dice|(If [bow]>=4: return 5 or 6),1,if(getstatusself(~charge~) >= 4) { givedice(rand([5|6])); } else { givedice(); } attack(1); sfx(~diceroll_):,,NORMAL,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,if(getstatusself(~charge~) >= 4) { givedice(rand([5|6])); } else { givedice(); },
Gun Power Pit_downgraded,Do [sword]1 damage[;] reroll dice|(If [bow]>=8: return 5 or 6),1,if(getstatusself(~charge~) >= 8) { givedice(rand([5|6])); } else { givedice(); } attack(1); sfx(_~diceroll~);,,NORMAL,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,if(getstatusself(~charge~) >= 8) { givedice(rand([5|6])); } else { givedice(); },
Powder Pot,Get a new dice[;]|on 4[;] gain 1 [bow]Charge,1,if(simulation) { givedice(); bonus(1000); } else{ givedice(); if(d == 4) { inflictself(~charge~|1); } },Focus,MAX4,,YELLOW,change_power,change_power,,,0,YES,NO,NO,,1,,,,,,,,,,,
Powder Pot_upgraded,Get a new dice[;]|on even[;] gain 1 [bow]Charge,1,if(simulation) { givedice(); bonus(1000); } else{ givedice(); if(d % 2 == 0) { inflictself(~charge~|1); } },Focus,NORMAL,,YELLOW,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Powder Pot_downgraded,Get a new dice,1,givedice(); sfx(~_diceroll~);,Focus,MAX4,,YELLOW,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Laser Light Show,Do [sword]5 damage|(If [bow]>=7: double damage),1,if(getstatusself(~charge~) >= 7) { attack(10); sfxdamage(target[;]10); } else { attack(5); sfxdamage(target[;]5); } ,,EVEN,,PURPLE,change_power,complicate,,,0,NO,NO,NO,,1,,,,,,,,,,,
Laser Light Show_upgraded,Do [sword]7 damage|(If [bow]>=7: double damage),1,if(getstatusself(~charge~) >= 7) { attack(14); sfxdamage(target[;]14); } else { attack(7); sfxdamage(target[;]7); } ,,EVEN,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Blinding Lights,Get 2x<d6>s next turn|(If [bow]>=5: get 3 instead),1,if(getstatusself(~charge~) >= 5) { inflictself(~stash~+d|3); inflictself(~illuminate~); sfx(~_diceroll~); } else { inflictself(~stash~+d|2); inflictself(~illuminate~); sfx(~_diceroll~); } ,,NORMAL,,PURPLE,change_power,complicate,,,0,YES,NO,NO,,1,,,,,,,,,,,
Blinding Lights_upgraded,Get 4x<d6>s next turn|(If [bow]>=5: get 6 instead),1,if(getstatusself(~charge~) >= 5) { inflictself(~stash~+d|6); inflictself(~illuminate~); sfx(~_diceroll~); } else { inflictself(~stash~+d|4); inflictself(~illuminate~); sfx(~_diceroll~); } ,,DOUBLES|DOUBLES,,PURPLE,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Daffokill,Dice value -1|(At start of turn: get [bow]1),1,if(d >= 2) givedice(d � 1); sfx(~_diceroll~);,,MIN4,,YELLOW,change_power,decreaserange,,,0,YES,NO,NO,,1,,,e.animate(~flashandshake~); inflictself(~charge~|1);,,,,,,,,
Daffokill_upgraded,Dice value -1|(At start of turn: get [bow]1),1,if(d >= 2) givedice(d � 1); sfx(~_diceroll~);,,MIN2,,YELLOW,,,,,0,YES,NO,NO,,,,,e.animate(~flashandshake~); inflictself(~charge~|1);,,,,,,,,
Gun Polish,Recover [heal]1 health[;]|gain [bow]1 mana,1,attackself(-1); inflictself(~charge~|1); sfx(~_heal~);,Regenerate,MAX3,,GREEN,change_power,complicate,,,0,YES,NO,NO,,1,,,,,,,,,,,
Gun Polish_upgraded,Recover [heal]<d6> health[;]|gain [bow]1 mana,1,attackself(-d); inflictself(~charge~|1); sfx(~_heal~);,Regenerate,MAX3,,GREEN,,,,,0,YES,NO,NO,,,,,,,,,,,,,
Gunburn,Do [fire]<d6> damage|(Cost [bow]2[]: burn 2 dice),1,if(getstatusself(~charge~) >= 2) { removestatusself(~charge~|2); sfxdamage(target[;]d); attack(d | FIRE); inflict(FIRE| 2); } else { attack(d | FIRE); sfxdamage(target[;]d); } ,Ember,MIN4,,RED,change_power,complicate,,,0,NO,NO,NO,,1,,,,,,,,,,,
Gunburn_upgraded,Do [fire]<d6> damage|(Cost [bow]2[]: burn 2 dice),1,if(getstatusself(~charge~) >= 2) { removestatusself(~charge~|2); attack(d | FIRE); sfxdamage(target[;]d); inflict(FIRE| 2); } else { attack(d | FIRE); sfxdamage(target[;]d); } ,Ember,NORMAL,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Ice Bow,Do [sword]5 damage|(If [bow]>=3: inflict freeze),1,if(getstatusself(~charge~) >= 3) { attack(5); inflict(ICE | 1); sfx(~_ice~|~~|0.2); } else { attack(5); sfxdamage(target|5); } ,Refrigerator,ODD,,PURPLE,change_power,complicate,,,0,NO,NO,NO,,1,,,,,,,,,,,
Ice Bow_upgraded,Do [sword]5 damage|(If [bow]>=3: inflict freeze),1,if(getstatusself(~charge~) >= 3) { attack(5); inflict(ICE | 1); sfx(~_ice~|~~|0.2); } else { attack(5); sfxdamage(target|5); } ,Refrigerator,NORMAL,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Miami Vacation,Do [sword]<d6> damage|(Cost [bow]6[]: triple damage),1,if(getstatusself(~charge~) >= 6) { removestatusself(~charge~|4); attack(d * 3); sfxdamage(target[;]d*3); } else { attack(d); sfxdamage(target[;]d*3); } ,Hellfire,EVEN|EVEN,,BRIGHTCYAN,simplify,complicate,,,0,NO,NO,NO,,2,,,,,,,,,,,
Hotline Milwakee,Do [sword]<d6> damage|(If [bow]>=12: triple damage),1,if(getstatusself(~charge~) >= 12) { attack(d * 3); sfxdamage(target[;]d*3); } else { attack(d);sfxdamage(target[;]d); } ,,ODD|ODD,,PURPLE,simplify,complicate,,,0,NO,NO,NO,,2,,,,,,,,,,,
Large Steel,Do [sword]<d6> damage[;]|gain 2 [bow]Charge on 2 or less,1,attack(d); sfxdamage(target[;]d); if(d <= 2) { inflictself(~charge~|2); },,NORMAL,,RED,change_power,complicate,,,0,NO,NO,NO,,1,,,,,,,,,,,
Large Steel_upgraded,Do [sword]<d6> damage[;]|gain 2 [bow]Charge on 4 or less,1,attack(d); sfxdamage(target[;]d); if(d <= 4) { inflictself(~charge~|2); },,NORMAL,,RED,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Laserlight Spear,Do [sword]10 damage|(If [bow]>=10: do double),1,if(getstatusself(~charge~) >= 10) { attack(20); sfxdamage(target[;]20); } else { attack(10);sfxdamage(target[;]10); } ,Magic Six,REQUIRE6,,PURPLE,change_power,doublerequirements,,,0,NO,NO,NO,,2,,,,,,,,,,,
Laserlight Spear_upgraded,Do [sword]10 damage|(If [bow]>=8: do double),1,if(getstatusself(~charge~) >= 8) { attack(20); sfxdamage(target[;]20); } else { attack(10);sfxdamage(target[;]10); } ,Magic Six,REQUIRE6,,PURPLE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Missle Thistle,Gain [thorns]1 thorns|(Cost [bow]2[]: +[thorns]1 extra),1,if(getstatusself(~charge~) >= 2) { removestatusself(~charge~|2); inflictself(THORNS| 2); } else { inflictself(THORNS| 1); } ,Plasma Gun,ODD,,GREEN,simplify,complicate,,,0,YES,NO,NO,,1,,,,,,,,,,,
Sematic Entrance,Start each fight with|[mana]4 mana,1,,,,,CYAN,change_power,noeffect,,,,NO,NO,NO,,,,,,if(turn == 1) { e.animate(~flashandshake~); e.changecolour(~GRAY~); inflictself(~charge~|2); sfx(~_magic~); },,,,,,,
Sematic Entrance_upgraded,Start each fight with|[mana]6 mana,1,,,,,CYAN,,,,,,NO,NO,NO,,,,,,if(turn == 1) { e.animate(~flashandshake~); e.changecolour(~GRAY~); inflictself(~charge~|3); sfx(~_magic~); },,,,,,,
Rest End,Gain 1 [vanish]Hunger|,1,inflictself(~hunger~);,,MAX3,,PURPLE,change_power,removereusable,,,4,YES,NO,NO,,,,,,,,,,,,,
Rest End_upgraded,Gain 1 [vanish]Hunger|,1,inflictself(~hunger~);,,MAX3,,PURPLE,,,,,6,YES,NO,NO,,,,,,,,,,,,,
Wolf's Bane,[heart]Drain for your [vanish]Hunger,2,drain(getstatusself(~hunger~)); sfx(~_drain~);,,MIN4,,PINK,change_power,complicate,,,0,NO,NO,NO,,,,,,,,,,,,,
Wolf's Bane_upgraded,[heart]Drain for your [vanish]Hunger,1,drain(getstatusself(~hunger~)); sfx(~_drain~);,,MIN4,,PINK,,complicate,,,0,NO,NO,NO,,,,,,,,,,,,,
Wolf's Bane_deckupgrade,[heart]Drain for your [vanish]Hunger,1,drain(getstatusself(~hunger~)); sfx(~_drain~);,,MIN2,,PINK,,complicate,,,0,NO,NO,NO,,,,,,,,,,,,,
Wolf's Bane_weakeaned,[heart]Drain for your [vanish]Hunger,1,drain(getstatusself(~hunger~)); sfx(~_drain~);,,REQUIRE6,,PINK,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Regurgitate,Set your [vanish]Hunger to|what it was last turn,1,removestatusself(~hunger~[;]ALL); inflictself(~hunger~[;]getstatusself(~regurgitatekludge~));,,NORMAL,,PURPLE,,,,,,YES,NO,NO,,,inflictself(~regurgitatekludge~);,,,,,,,,,,
[gray]Digest,Gain 1 [vanish]Hunger,1,inflictself(~hunger~);,,COUNTDOWN,2,PURPLE,change_power,decreaserange,,,0,YES,NO,NO,,,,,,,,,,,,,
[gray]Digest_upgraded,Gain 2 [vanish]Hunger,1,inflictself(~hunger~[;]2);,,COUNTDOWN,2,PURPLE,,,,,0,YES,NO,NO,,,,,,,,,,,,,
[gray]Grumble,Gain 1 [vanish]Hunger[][;]|[heal]Heal for your [vanish]Hunger,2,inflictself(~hunger~); attackself(-getstatusself(~hunger~)); sfx(~_drain~);,,COUNTDOWN,3,PINK,change_power,complicate,,,,YES,NO,NO,,,,,,,,,,,,,
[gray]Grumble_upgraded,Gain 2 [vanish]Hunger[][;]|[heal]Heal for your [vanish]Hunger,2,inflictself(~hunger~[;]2); attackself(-getstatusself(~hunger~)); sfx(~_drain~);,,COUNTDOWN,3,PINK,,,,,,YES,NO,NO,,,,,,,,,,,,,
[gray]Grumble_downgraded,Gain 1 [vanish]Hunger[],2,inflictself(~hunger~); sfx(~_drain~);,,COUNTDOWN,3,PINK,,,,,,YES,NO,NO,,,,,,,,,,,,,
[gray]Growl,Gain 8 [vanish]Hunger,2,inflictself(~hunger~[;]8);,,COUNTDOWN,12,ORANGE,halfcountdown,noeffect,,,,YES,NO,NO,,finale,,,,,,,,,,,
[gray]Chomp,Spend 2 [vanish]Hunger to|[heart]Drain 3,2,if(getstatusself(~hunger~) <= 1) { self.textparticle(~No effect!~); } else { drain(3); removestatusself(~hunger~| 2); sfx(~_drain~); },,NORMAL,,RED,change_power,complicate,,,,NO,NO,NO,,,,,,,,,,,,,
[gray]Chomp_upgraded,Spend 2 [vanish]Hunger to|[heart]Drain 3[;] Return the dice,2,if(getstatusself(~hunger~) <= 1) { self.textparticle(~No effect!~); } else { drain(3); removestatusself(~hunger~| 2); sfx(~_drain~); } givedice(d);,,NORMAL,,RED,change_power,complicate,,,,NO,NO,NO,,,,,,,,,,,,,
[gray]Gurgle,Gain 1 [vanish]Hunger|Return the dice,1,inflictself(~hunger~);givedice(d);,,MAX3,,PURPLE,increaserange,decreaserange,,,,YES,NO,NO,,,,,,,,,,,,,
Smack,Do [sword]2 Damage[;]|Lower counts by 1,2,boostcountdowns(1); attack(2); sfxdamage(target[;]3);,,COUNTDOWN,2,YELLOW,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,Boostcountdowns(1); 
Smack_upgraded,Do [sword]2 Damage[;]|Lower counts by 2,2,boostcountdowns(2); attack(2);sfxdamage(target[;]3);,,COUNTDOWN,2,YELLOW,,,,,,NO,NO,NO,,,,,,,,,,,,,Boostcountdowns(2); 
Smack_downgraded,Do [sword]2 Damage,2,attack(2); sfxdamage(target[;]3);,,COUNTDOWN,2,YELLOW,,,,,,NO,NO,NO,,,,,,,,,,,,,Boostcountdowns(1); 
Slap,Do [sword]1 Damage[;]|Lower counts by 2,2,boostcountdowns(2); attack(1); sfxdamage(target[;]2);,,COUNTDOWN,4,RED,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,Boostcountdowns(2); 
Slap_upgraded,Do [sword]1 Damage[;]|Lower counts by 3,2,boostcountdowns(3); attack(1); sfxdamage(target[;]2);,,COUNTDOWN,4,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,boostcountdowns(3); 
Slap_downgraded,Do [sword]1 Damage[;]|Lower counts by 1,2,Boostcountdowns(1); attack(1); sfxdamage(target[;]2);,,COUNTDOWN,4,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,Boostcountdowns(2); 
Meats,Lower counts by 2[;]|Heal [heal]1,2,boostcountdowns(2); attackself(-1); sfx(~_heal~);,,NORMAL,,RED,change_power,complicate,,,,YES,NO,NO,,,,,,,,,,,,,
Meats_upgraded,Lower counts by 3[;]|Heal [heal]1,2,boostcountdowns(3); attackself(-1); sfx(~_heal~);,,NORMAL,,RED,,,,,,YES,NO,NO,,,,,,,,,,,,,
Rolling Ball,Do [sword]3 Damage[;]|Roll a new dice,1,attack(3); givedice();,,COUNTDOWN,4,RED,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,
Rolling Ball_upgraded,Do [sword]4 Damage[;]|Roll a new dice,1,attack(4); givedice();,,COUNTDOWN,4,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Rolling Ball_downgraded,Do [sword]2 Damage[;]|Roll a new dice,1,attack(2); givedice();,,COUNTDOWN,4,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Rotten Meats,Double your [vanish]Hunger,1,inflictself(~hunger~[;]getstatusself(~hunger~));,,MIN4,,GREEN,increaserange,complicate,,,,YES,NO,NO,,,,,,,,,,,,,
Vibe Grip,Combine both dice[;]|flip[;] and duplicate results,2,givedice([7-d[;]7-d]);,,MAX3|MAX3,,GREEN,change_power,decreaserange,,,,YES,NO,NO,,,,,,,,,,,,,
Vibe Grip_upgraded,Combine both dice[;]|flip[;] and triplicate results,2,givedice([7-d[;]7-d[;]7-d]);,,MAX3|MAX3,,GREEN,,,,,,YES,NO,NO,,,,,,,,,,,,,
Countdown,Whenever an equipment is used|Reduce all counts by [clock]1|[gray](after using this),1,inflictself(~countdown~);,,ODD,,RED,change_power,complicate,,,,YES,NO,NO,,,,,,,,,,,,,
Countdown_upgraded,Whenever an equipment is used|Reduce all counts by [clock]2|[gray](after using this),1,inflictself(~countdown~[;]2);,,ODD,,RED,,,,,,YES,NO,NO,,,,,,,,,,,,,
Clockpicks,Split Dice[;] Gain [clock]1 ,1,givedice(split(d)[;] ~splitdice~);,,MIN3,,RED,increaserange,complicate,,,,YES,NO,NO,,,,,,,,,,,,,
Recurrence,Gain 1[clock][;] and 1[recycle],2,inflictself(~countdown~); inflictself(REEQUIPNEXT);,,COUNTDOWN,3,PURPLE,change_power,noeffect,,,,YES,NO,NO,,,,,,,,,,,,,
Recurrence_upgraded,Gain 2[clock][;] and 2[recycle],2,inflictself(~countdown~[;]2); inflictself(REEQUIPNEXT[;]2);,,COUNTDOWN,3,PURPLE,,,,,,YES,NO,NO,,,,,,,,,,,,,
Stave,Do [sword]6 damage,2,attack(6); sfxdamage(target[;]6);,,COUNTDOWN,5,RED,change_power,noeffect,,,,NO,NO,NO,,,,,,,,,,,,,
Stave_upgraded,Do [sword]7 damage,2,attack(7); sfxdamage(target[;]7);,,COUNTDOWN,5,RED,,,,,,NO,NO,NO,,,,,,,,,,,,,
Jackhammer,Do 6 damage[;]|[shock]Shocks the enemy,2,attack(6| SHOCK); inflict(SHOCK); sfxdamage(target[;]6);,,COUNTDOWN,8,YELLOW,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,
Jackhammer_downgraded,Do 4 damage[;]|[shock]Shocks the enemy,2,attack(4| SHOCK); inflict(SHOCK); sfxdamage(target[;]4);,,COUNTDOWN,8,YELLOW,,,,,,NO,NO,NO,,,,,,,,,,,,,
Jackhammer_upgraded,Do 8 damage[;]|[shock]Shocks the enemy,2,attack(8| SHOCK); inflict(SHOCK); sfxdamage(target[;]8);,,COUNTDOWN,8,YELLOW,,,,,,NO,NO,NO,,,,,,,,,,,,,
Low Voltage,Do 4 damage[;]|Roll a dice if the enemy is shocked,2,if(getstatus(SHOCK) > 0) { givedice(); } attack((4) | SHOCK);,,COUNTDOWN,5,YELLOW,change_power,noeffect,,,,NO,NO,NO,,,,,,,,,,,,,
Low Voltage_upgraded,Do 5 damage[;]|Roll a dice if the enemy is shocked,2,if(getstatus(SHOCK) > 0) { givedice(); } attack((5) | SHOCK);,,COUNTDOWN,5,YELLOW,,,,,,NO,NO,NO,,,,,,,,,,,,,
Zap,[shock]Shock the enemy,1,inflict(SHOCK);,,COUNTDOWN,2,YELLOW,halfcountdown,noeffect,,,,NO,NO,NO,,,,,,,,,,,,,
Reflect,Gain 2 [shield]Shield,1,inflictself(SHIELD[;]2);,,COUNTDOWN,2,ORANGE,halfcountdown,noeffect,,,,YES,NO,NO,,,,,,,,,,,,,
Ice Hard,Inflict 1 [ice]Freeze,1,inflict(ICE);,,COUNTDOWN,2,CYAN,halfcountdown,noeffect,,,,NO,NO,NO,,,,,,,,,,,,,
Beep,Inflict 1 [weaken]Weaken,1,inflict(WEAKEN); sfx(~_applyweaken~);,,COUNTDOWN,2,ORANGE,halfcountdown,noeffect,,,,NO,NO,NO,,,,,,,,,,,,,
Resonate,Do [weaken]3 damage[;]|+[weaken]2 if enemy is weak,2,if(getstatus(WEAKEN) > 0) { attack((5) | WEAKEN); } else { attack((3) | WEAKEN); },Scream,COUNTDOWN,5,ORANGE,change_power,change_power,,,0,NO,NO,NO,,,,,,,,,,,,,
Resonate_upgraded,Do [weaken]3 damage[;]|+[weaken]4 if enemy is weak,2,if(getstatus(WEAKEN) > 0) { attack((7) | WEAKEN); } else { attack((3) | WEAKEN); } ,Scream,COUNTDOWN,5,ORANGE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Resonate_downgraded,Do [weaken]1 damage[;]|+[weaken]2 if enemy is weak,2,if(getstatus(WEAKEN) > 0) { attack((3) | WEAKEN); } else { attack((1) | WEAKEN); },Scream,COUNTDOWN,5,ORANGE,,,,,0,NO,NO,NO,,,,,,,,,,,,,
Sharpened Bone,Inflict 1 [weaken]Weaken[;]| Do [weaken]3 damage,1,attack(3 | WEAKEN); inflict(WEAKEN); sfx(~_applyweaken~);,,COUNTDOWN,5,ORANGE,change_power,change_power,,,,NO,NO,NO,,,,,,,,,,,,,
Sharpened Bone_downgraded,Inflict 1 [weaken]Weaken[;]| Do [weaken]2 damage,1,attack(2 | WEAKEN); inflict(WEAKEN); sfx(~_applyweaken~);,,COUNTDOWN,5,ORANGE,,,,,,NO,NO,NO,,,,,,,,,,,,,
Sharpened Bone_upgraded,Inflict 1 [weaken]Weaken[;]| Do [weaken]4 damage,1,attack(4 | WEAKEN); inflict(WEAKEN); sfx(~_applyweaken~);,,COUNTDOWN,5,ORANGE,,,,,,NO,NO,NO,,,,,,,,,,,,,
Backing Track,Roll a dice for every|[weaken]1 weaken on enemy,1,var numweaken = getstatus(WEAKEN); if(numweaken > 0) { var returndice = []; for(i in 0 ... numweaken) { returndice.push(rand([1|2|3|4|5|6])); } givedice(returndice); },,COUNTDOWN,6,ORANGE,halfcountdown,noeffect,,,0,YES,NO,NO,,,,,,,,,,,,,
Back Line,Lose [heart]3 health[;]|gain[shield]3 shield[;]|reduce counts by 4,2,pierceattackself(3); inflictself(SHIELD| 3); boostcountdowns(4),,COUNTDOWN,4,ORANGE,change_power,noeffect,,,0,YES,NO,NO,,,,,,,,,,,,,
Back Line_upgraded,Lose [heart]6 health[;]|gain[shield]6 shield[;]|reduce counts by 4,2,pierceattackself(6); inflictself(SHIELD| 6); boostcountdowns(4),,COUNTDOWN,4,ORANGE,,,,,0,YES,NO,NO,,,,,,,,,,,,,
